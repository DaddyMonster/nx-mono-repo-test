name: NX Affected Release
on:
  push:
    branches:
      - master
      - main

env:
  BEFORE_SHA: ${{ github.event.before }}
  GC_PROJECT_ID: ${{ secrets.GC_PROJECT_ID }}
  GC_REGION: ${{ secrets.GC_REGION }}
  GC_SERVICE_ACCOUNT: ${{ secrets.GC_SERVICE_ACCOUNT }}
  GC_SERVICE_ACCOUNT_EMAIL: ${{ secrets.GC_SERVICE_ACCOUNT_EMAIL }}
  NEST_SECRETS: ${{ secrets.TEST_NEST_SECRETS }}
  # gcr.io 리포 이름

jobs:
  check_if_package_modified:
    name: Detact Package.json modification and rebuild base docker img
    runs-on: ubuntu-latest
    steps:
      - uses: MontyD/package-json-updated-action@1.0.1
        id: check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_base_img:
    name: Build and deloy base docker img with all dependencies pre-installed
    runs-on: ubuntu-latest
    needs: check_if_package_modified
    steps:
      - name: Build and deploy Base-Docker-Img at root directory only when package.json has changed!
        if: needs.check_if_package_modified.check.outputs.files_changed == 'true'
        run: bash ./ci/base-img.sh
      - name: roll up
        run : echo DONE
  affected_build:
    name: build only affected apps
    needs: deploy_base_img
    runs-on: ubuntu-latest
    container: gcr.io/nx-test-307509/nx-base-img:latest
    steps:
      # Nx git diff 사용으로 affted 사용을 위한 git history fetching
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - run: git fetch origin master
      # Nx 사용을 위한 디펜던시 설치
      - name: Install Dependency
        run: npm install

      # GC_AUTH
      - name: GC_AUTH
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GC_PROJECT_ID }}
          service_account_key: ${{ secrets.GC_SERVICE_ACCOUNT }}
          service_account_email: ${{ secrets.GC_SERVICE_ACCOUNT_EMAIL }}

      # 도커 사용 설정
      - name: Enable the necessary APIs and enable docker auth
        run: |-
          gcloud services enable containerregistry.googleapis.com
          gcloud services enable run.googleapis.com
          gcloud --quiet auth configure-docker

      # Affected build
      - name: Run Affected Build and Deploy
        shell: bash
        run: npm run affected:prod-build -- --base=$BEFORE_SHA
